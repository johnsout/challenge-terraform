defaults: &defaults
  machine: true
  environment:
    GRUNTWORK_INSTALLER_VERSION: v0.0.22
    TERRATEST_LOG_PARSER_VERSION: v0.13.13
    KUBERGRUNT_VERSION: v0.3.9
    HELM_VERSION: v2.11.0
    MODULE_CI_VERSION: v0.13.3
    TERRAFORM_VERSION: 0.12.7
    TERRAGRUNT_VERSION: NONE
    PACKER_VERSION: NONE
    GOLANG_VERSION: 1.11.2
    K8S_VERSION: v1.10.0
    KUBECONFIG: /home/circleci/.kube/config

install_gruntwork_utils: &install_gruntwork_utils
  name: install kubergrunt and terraform utils
  command: |
    curl -Lo terraform.zip https://releases.hashicorp.com/terraform/0.12.18/terraform_0.12.18_linux_amd64.zip
    unzip terraform.zip
    chmod +x terraform
    sudo mv terraform /usr/local/bin/
    curl -Lo kubergrunt https://github.com/gruntwork-io/kubergrunt/releases/download/v0.5.8/kubergrunt_linux_amd64
    chmod +x kubergrunt 
    sudo mv kubergrunt /usr/local/bin

install_helm_client: &install_helm_client
  name: install helm client
  command: |
    # install helm client
    curl -Lo helm.tar.gz https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz
    tar -xvf helm.tar.gz
    chmod +x linux-amd64/helm
    sudo mv linux-amd64/helm /usr/local/bin/

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - dep-v1-{{ checksum "test/Gopkg.lock" }}

      # Install gruntwork utilities
      - run:
          <<: *install_gruntwork_utils

      - save_cache:
          key: dep-v1-{{ checksum "test/Gopkg.lock" }}
          paths:
          - ./test/vendor

      # Fail the build if the pre-commit hooks don't pass. Note: if you run pre-commit install locally, these hooks will
      # execute automatically every time before you commit, ensuring the build never fails at this step!
      - run: pip install pre-commit==1.11.2
      - run: pre-commit install
      - run: pre-commit run --all-files

      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project
            - terraform
            - packer

  test:
    <<: *defaults
    steps:
    - attach_workspace:
        at: /home/circleci
    - checkout
    - run: echo 'export PATH=$HOME/terraform:$HOME/packer:$PATH' >> $BASH_ENV
    - run:
        <<: *install_gruntwork_utils

    # Install helm
    - run:
        <<: *install_helm_client

    - run:
        name: update gcloud
        command: |
          sudo apt-get remove -y google-cloud-sdk
          sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update
          sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update kubectl
    - run:
        name: configure kubectl
        command: |
          mkdir -p ${HOME}/.kube
          touch ${HOME}/.kube/config
    - run:
        name: run tests
        command: |
          mkdir -p /tmp/logs
          # required for gcloud and kubectl to authenticate correctly
          echo $GCLOUD_SERVICE_KEY > /home/circleci/serviceaccount.json
          export GOOGLE_APPLICATION_CREDENTIALS="/home/circleci/serviceaccount.json"
          cat $GOOGLE_APPLICATION_CREDENTIALS
          gcloud auth activate-service-account --key-file="/home/circleci/serviceaccount.json" terraform@kubehelmproj001.iam.gserviceaccount.com
          #gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          #gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          kubectl get ns
          gcloud auth application-default print-access-token
          terraform init
          terraform plan
          # required for terraform and terratest to authenticate correctly
        no_output_timeout: 3600s
    - run:
        name: deploy terraform
        command: |
          terraform init 
          terraform plan
        when: always
    - store_artifacts:
        path: /tmp/logs
    - store_test_results:
        path: /tmp/logs

workflows:
  version: 2
  build-and-test:
    jobs:
    - build
    - test:
        requires:
        - build
